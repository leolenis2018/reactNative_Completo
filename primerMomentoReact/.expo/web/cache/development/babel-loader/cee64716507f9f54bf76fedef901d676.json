{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ReactNative\\\\primerMomentoReact\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      valorPrestamo = _useState2[0],\n      setValorPrestamo = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      resultado = _useState4[0],\n      setResultado = _useState4[1];\n\n  var calcularResultado = function calcularResultado(operador) {\n    if (valorPrestamo > 400) {\n      var mresultado = 0;\n\n      switch (operador) {\n        case \"+\":\n          mresultado = parseFloat(valor1) + parseFloat(valor2);\n          break;\n\n        case \"-\":\n          mresultado = parseFloat(valor1) - parseFloat(valor2);\n          break;\n\n        case \"*\":\n          mresultado = parseFloat(valor1) * parseFloat(valor2);\n          break;\n\n        case \"/\":\n          mresultado = parseFloat(valor1) / parseFloat(valor2);\n          break;\n\n        case \"c\":\n          mresultado = 0;\n          setValor1(\"\");\n          setValor2(\"\");\n          break;\n      }\n\n      setResultado(mresultado);\n    } else alert(\"Debe ingresar los dos valores\");\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Simuladore Cr\\xE9dito\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Valor del prestamo\"), React.createElement(TextInput, {\n    placeholder: \"Ingrese valor solicitado\",\n    style: {\n      borderBottomWidth: 2,\n      color: \"yellow\",\n      backgroundColor: \"aqua\"\n    },\n    onChangeText: function onChangeText(valor1) {\n      return setValor1(valor1);\n    },\n    value: valor1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Tipo Pr\\xE9stamo\"), React.createElement(TextInput, {\n    placeholder: \"Tipo de pr\\xE9stamo\",\n    style: {\n      borderBottomWidth: 2,\n      color: \"blue\",\n      backgroundColor: \"aqua\"\n    },\n    onChangeText: function onChangeText(valor2) {\n      return setValor2(valor2);\n    },\n    value: valor2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Valor Cuota\"), React.createElement(TextInput, {\n    style: {\n      borderBottomWidth: 2,\n      color: \"blue\",\n      backgroundColor: \"aqua\"\n    },\n    value: resultado,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Total Deuda\"), React.createElement(TextInput, {\n    style: {\n      borderBottomWidth: 2,\n      color: \"blue\",\n      backgroundColor: \"aqua\"\n    },\n    value: resultado,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    title: \"Calcular\",\n    onPress: function onPress() {\n      return calcularResultado(\"+\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    title: \"Limpiar\",\n    onPress: function onPress() {\n      return calcularResultado(\"c\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/ReactNative/primerMomentoReact/App.js"],"names":["StatusBar","React","useState","App","valorPrestamo","setValorPrestamo","resultado","setResultado","calcularResultado","operador","mresultado","parseFloat","valor1","valor2","setValor1","setValor2","alert","styles","container","borderBottomWidth","color","backgroundColor","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\n//Se importan todos los elementos que sean controles\nimport { StyleSheet, Text, View, TextInput, Button } from \"react-native\";\n\nexport default function App() {\n  //Definir variables de estado (componente):\n  const [valorPrestamo, setValorPrestamo] = useState(\"\");\n  /*const [valor2, setValor2] = useState(\"\");*/\n  const [resultado, setResultado] = useState(\"\");\n\n  const calcularResultado = (operador) => {\n    if (valorPrestamo >400) {\n      let mresultado = 0;\n      switch (operador) {\n        case \"+\":\n          mresultado = parseFloat(valor1) + parseFloat(valor2);\n          break;\n        case \"-\":\n          mresultado = parseFloat(valor1) - parseFloat(valor2);\n          break;\n        case \"*\":\n          mresultado = parseFloat(valor1) * parseFloat(valor2);\n          break;\n        case \"/\":\n          mresultado = parseFloat(valor1) / parseFloat(valor2);\n          break;\n        case \"c\":\n          mresultado = 0;\n          setValor1(\"\");\n          setValor2(\"\");\n          break;\n      }\n      setResultado(mresultado);\n    } else alert(\"Debe ingresar los dos valores\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Simuladore Crédito</Text>\n      <Text>{\"\\n\"}</Text>\n      <Text>Valor del prestamo</Text>\n      <TextInput\n        placeholder=\"Ingrese valor solicitado\"\n        style={{ borderBottomWidth: 2, color: \"yellow\", backgroundColor: \"aqua\" }}\n        onChangeText={(valor1) => setValor1(valor1)}\n        value={valor1}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Text>Tipo Préstamo</Text>\n      <TextInput\n        placeholder=\"Tipo de préstamo\"\n        style={{ borderBottomWidth: 2, color: \"blue\", backgroundColor: \"aqua\" }}\n        onChangeText={(valor2) => setValor2(valor2)}\n        value={valor2}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Text>Valor Cuota</Text>\n      <TextInput\n        style={{ borderBottomWidth: 2, color: \"blue\", backgroundColor: \"aqua\" }}\n        value={resultado}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Text>Total Deuda</Text>\n      <TextInput\n        style={{ borderBottomWidth: 2, color: \"blue\", backgroundColor: \"aqua\" }}\n        value={resultado}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Button title=\"Calcular\" onPress={() => calcularResultado(\"+\")} />\n      <Text>{\"\\n\"}</Text>\n      <Button title=\"Limpiar\" onPress={() => calcularResultado(\"c\")} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}