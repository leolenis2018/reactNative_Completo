{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ReactNative\\\\primerMomentoReact\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      valorPrestamo = _useState2[0],\n      setValorPrestamo = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      numeroCuotas = _useState4[0],\n      setNumeroCuotas = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      resultado = _useState6[0],\n      setResultado = _useState6[1];\n\n  var calcularResultado = function calcularResultado(operador) {\n    if (valorPrestamo > 4000000 && valorPrestamo <= 100000000) {\n      var mresultado = 0;\n\n      switch (operador) {\n        case \"Vivienda\":\n          mresultado = parseFloat(valorPrestamo) * parseFloat(numeroCuotas);\n          break;\n\n        case \"Educacion\":\n          mresultado = parseFloat(valorPrestamo) * 0.8;\n\n        case \"c\":\n          mresultado = 0;\n          setValorPrestamo(\"\");\n          break;\n      }\n\n      setResultado(mresultado);\n    } else alert(\"Debe ingresar valor del prestamo\");\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Simulador de Cr\\xE9dito\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Valor del prestamo\"), React.createElement(TextInput, {\n    placeholder: \"Ingrese valor solicitado\",\n    style: {\n      borderBottomWidth: 2,\n      color: \"aqua\",\n      backgroundColor: \"aqua\"\n    },\n    onChangeText: function onChangeText(valorPrestamo) {\n      return setValor1(valorPrestamo);\n    },\n    value: valorPrestamo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Numero de Cuotas\"), React.createElement(TextInput, {\n    placeholder: \"Ingrese valor 2\",\n    style: {\n      borderBottomWidth: 2,\n      color: \"blue\",\n      backgroundColor: \"aqua\"\n    },\n    onChangeText: function onChangeText(valor2) {\n      return setValor2(valor2);\n    },\n    value: valor2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Valor Cuota\"), React.createElement(TextInput, {\n    style: {\n      borderBottomWidth: 2,\n      color: \"blue\",\n      backgroundColor: \"aqua\"\n    },\n    value: resultado,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Total Deuda\"), React.createElement(TextInput, {\n    style: {\n      borderBottomWidth: 2,\n      color: \"blue\",\n      backgroundColor: \"aqua\"\n    },\n    value: resultado,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    title: \"Vivienda\",\n    onPress: function onPress() {\n      return calcularResultado(\"Vivienda\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    title: \"Educacion\",\n    onPress: function onPress() {\n      return calcularResultado(\"Educacion\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    title: \"Limpiar\",\n    onPress: function onPress() {\n      return calcularResultado(\"c\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/ReactNative/primerMomentoReact/App.js"],"names":["StatusBar","React","useState","App","valorPrestamo","setValorPrestamo","numeroCuotas","setNumeroCuotas","resultado","setResultado","calcularResultado","operador","mresultado","parseFloat","alert","styles","container","borderBottomWidth","color","backgroundColor","setValor1","valor2","setValor2","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\n//Se importan todos los elementos que sean controles\nimport { StyleSheet, Text, View, TextInput, Button } from \"react-native\";\n\nexport default function App() {\n  //Definir variables de estado (componente):\n  const [valorPrestamo, setValorPrestamo] = useState(\"\");\n  const [numeroCuotas, setNumeroCuotas] = useState(\"\");\n  const [resultado, setResultado] = useState(\"\");\n\n  const calcularResultado = (operador) => {\n    if (valorPrestamo > 4000000 && valorPrestamo <= 100000000) {\n      let mresultado = 0;\n      switch (operador) {\n        case \"Vivienda\":\n          mresultado = parseFloat(valorPrestamo) * parseFloat(numeroCuotas);\n          break;\n        case \"Educacion\":\n          mresultado = parseFloat(valorPrestamo) * 0.8;\n        case \"c\":\n          mresultado = 0;\n          setValorPrestamo(\"\");\n          break;\n      }\n      setResultado(mresultado);\n    } else alert(\"Debe ingresar valor del prestamo\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Simulador de Crédito</Text>\n      <Text>{\"\\n\"}</Text>\n      <Text>Valor del prestamo</Text>\n      <TextInput\n        placeholder=\"Ingrese valor solicitado\"\n        style={{\n          borderBottomWidth: 2,\n          color: \"aqua\",\n          backgroundColor: \"aqua\",\n        }}\n        onChangeText={(valorPrestamo) => setValor1(valorPrestamo)}\n        value={valorPrestamo}\n      />\n        <Text>Numero de Cuotas</Text>\n      <TextInput\n        placeholder=\"Ingrese valor 2\"\n        style={{ borderBottomWidth: 2, color: \"blue\", backgroundColor: \"aqua\" }}\n        onChangeText={(valor2) => setValor2(valor2)}\n        value={valor2}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Text>Valor Cuota</Text>\n      <TextInput\n        style={{ borderBottomWidth: 2, color: \"blue\", backgroundColor: \"aqua\" }}\n        value={resultado}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Text>Total Deuda</Text>\n      <TextInput\n        style={{ borderBottomWidth: 2, color: \"blue\", backgroundColor: \"aqua\" }}\n        value={resultado}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Button title=\"Vivienda\" onPress={() => calcularResultado(\"Vivienda\")} />\n      <Text>{\"\\n\"}</Text>\n      <Button\n        title=\"Educacion\"\n        onPress={() => calcularResultado(\"Educacion\")}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Button title=\"Limpiar\" onPress={() => calcularResultado(\"c\")} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}