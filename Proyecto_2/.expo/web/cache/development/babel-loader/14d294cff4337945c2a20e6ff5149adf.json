{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ReactNative\\\\Proyecto_2\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      valor1 = _useState2[0],\n      setValor1 = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      valor2 = _useState4[0],\n      setValor2 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      resultado = _useState6[0],\n      setResultado = _useState6[1];\n\n  var calcularResultado = function calcularResultado(operador) {\n    var mresultado = 0;\n\n    switch (operador) {\n      case \"+\":\n        mresultado = parseFloat(valor1) + parseFloat(valor2);\n        break;\n\n      case \"-\":\n        mresultado = parseFloat(valor1) - parseFloat(valor2);\n        break;\n\n      case \"*\":\n        mresultado = parseFloat(valor1) * parseFloat(valor2);\n        break;\n\n      case \"/\":\n        mresultado = parseFloat(valor1) / parseFloat(valor2);\n        break;\n\n      case \"c\":\n        mresultado = 0;\n        setValor1('');\n        setValor2('');\n        break;\n    }\n\n    setResultado(mresultado);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Mi Calculadora\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Valor 1\"), React.createElement(TextInput, {\n    placeholder: \"Ingrese valor 1\",\n    style: {\n      borderBottomWidth: 2,\n      color: \"blue\",\n      backgroundColor: \"aqua\"\n    },\n    onChangeText: function onChangeText(valor1) {\n      return setValor1(valor1);\n    },\n    value: valor1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Valor 2\"), React.createElement(TextInput, {\n    placeholder: \"Ingrese valor 2\",\n    style: {\n      borderBottomWidth: 2,\n      color: \"blue\",\n      backgroundColor: \"aqua\"\n    },\n    onChangeText: function onChangeText(valor2) {\n      return setValor2(valor2);\n    },\n    value: valor2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Resultado\"), React.createElement(TextInput, {\n    style: {\n      borderBottomWidth: 2,\n      color: \"blue\",\n      backgroundColor: \"aqua\"\n    },\n    value: resultado,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    title: \"Sumar\",\n    onPress: function onPress() {\n      return calcularResultado('+');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    title: \"Restar\",\n    onPress: function onPress() {\n      return calcularResultado('-');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    title: \"Multiplicar\",\n    onPress: function onPress() {\n      return calcularResultado('*');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    title: \"Dividir\",\n    onPress: function onPress() {\n      return calcularResultado('/');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    title: \"Limpiar\",\n    onPress: function onPress() {\n      return calcularResultado('-');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/ReactNative/Proyecto_2/App.js"],"names":["StatusBar","React","useState","App","valor1","setValor1","valor2","setValor2","resultado","setResultado","calcularResultado","operador","mresultado","parseFloat","styles","container","borderBottomWidth","color","backgroundColor","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\n//Se importan todos los elementos que sean controles\nimport { StyleSheet, Text, View, TextInput, Button } from \"react-native\";\n\nexport default function App() {\n  //Definir variables de estado (componente):\n  const [valor1, setValor1] = useState(\"\");\n  const [valor2, setValor2] = useState(\"\");\n  const [resultado, setResultado] = useState(\"\");\n\n  //Metodos a utilizar.\n  //Funcion Tipo Flecha\n  /* const calcularSuma = () => {\n    setResultado(parseFloat(valor1) + parseFloat(valor2));\n  };\n\n  //Funcion Anonima\n  const calcularResta = function () {\n    setResultado(parseFloat(valor1) - parseFloat(valor2));\n  };*/\n\n  //Una funcion para todas las operaciones.\n  const calcularResultado = (operador) => {\n    let mresultado = 0;\n    switch (operador) {\n      case \"+\":\n        mresultado = parseFloat(valor1) + parseFloat(valor2);\n        break;\n      case \"-\":\n        mresultado = parseFloat(valor1) - parseFloat(valor2);\n        break;\n      case \"*\":\n        mresultado = parseFloat(valor1) * parseFloat(valor2);\n        break;\n      case \"/\":\n        mresultado = parseFloat(valor1) / parseFloat(valor2);\n        break;\n      case \"c\":\n        mresultado = 0;\n        setValor1('');\n        setValor2('');\n        break;\n    }\n    setResultado(mresultado)\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Mi Calculadora</Text>\n      <Text>{\"\\n\"}</Text>\n      <Text>Valor 1</Text>\n      <TextInput\n        placeholder=\"Ingrese valor 1\"\n        style={{ borderBottomWidth: 2, color: \"blue\", backgroundColor: \"aqua\" }}\n        onChangeText={(valor1) => setValor1(valor1)}\n        value={valor1}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Text>Valor 2</Text>\n      <TextInput\n        placeholder=\"Ingrese valor 2\"\n        style={{ borderBottomWidth: 2, color: \"blue\", backgroundColor: \"aqua\" }}\n        onChangeText={(valor2) => setValor2(valor2)}\n        value={valor2}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Text>Resultado</Text>\n      <TextInput\n        style={{ borderBottomWidth: 2, color: \"blue\", backgroundColor: \"aqua\" }}\n        value={resultado}\n      />\n      <Text>{\"\\n\"}</Text>\n      <Button title=\"Sumar\" onPress={()=>calcularResultado('+')} />\n      <Text>{\"\\n\"}</Text>\n      <Button title=\"Restar\" onPress={()=>calcularResultado('-')} />\n      <Text>{\"\\n\"}</Text>\n      <Button title=\"Multiplicar\" onPress={()=>calcularResultado('*')}/>\n      <Text>{\"\\n\"}</Text>\n      <Button title=\"Dividir\" onPress={()=>calcularResultado('/')}/>\n      <Text>{\"\\n\"}</Text>\n      <Button title=\"Limpiar\" onPress={()=>calcularResultado('-')} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}